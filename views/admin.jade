extends layout


block content

	.row
		h1 Admin
		.error-container.error
		.success-container.green
		.col-sm-12.button-container
			button.flat-button(onclick="toggleContainer('odds-container')") Enter Odds 
			button.flat-button(onclick="toggleContainer('winners-container')") Enter Division Leaders
			button.flat-button.red-button(onclick="debug()") Debug
			button.flat-button(onclick="toggleContainer('win-loss-container')") Enter W/L Records
			button.flat-button(onclick="toggleContainer('matches-container')") Enter Matches
			button.flat-button(onclick="toggleContainer('stats-container')") Show Stats


	.row.odds-container.page-container.hidden
		.col-md-10.col-md-offset-1
			h1 Enter Odds 

			form#odds-form.form(role='form')

				each t,i in teams

					if i % 3 == 0
						.row

					.col-md-4
						.form-group.odds-group(data-tid="#{t.id}")
							label.bold #{t.short_name} [#{t.division}] &nbsp;&nbsp;&nbsp;
							input.form-control-override.input-inline(name="divisionChampionOdds", type="text", maxlength="24", placeholder="Odds to win Division", required)
							input.form-control-override.input-inline(name="playoffOdds", type="text", maxlength="24", placeholder="Odds to make playoffs", required)

				button.flat-button(type="submit") Submit

	.row.winners-container.page-container.hidden
		.col-md-10.col-md-offset-1
			h1 Enter Division Leaders

			form#winners-form.form(role='form')

				each d, i in pick_ordering
					if i % 2 == 0
						.row

					.col-md-6
						.form-group
							label.bold #{d}
							select.form-control-override.input-inline(data-is_wildcard="#{d.indexOf('WC') != -1}", required)
								each t in teams
									if d.indexOf(t.division) != -1 && d.indexOf(t.sub_division.toUpperCase()) != -1
										option(value='#{t.id}')=t.short_name
									else if d.indexOf(t.division) != -1 && d.indexOf('WC') != -1
										option(value='#{t.id}')=t.short_name

				button.flat-button(type='submit') Submit

	.row.stats-container.page-container.hidden
		.col-md-10.col-md-offset-1
			h1 Stats

			table.table
				each u, i in users
					tr
						td #{u.first_name + ' ' + u.last_name}
						td=u.email
						td=u.leagues
						td=u.createdAt

	.row.win-loss-container.page-container.hidden
		.col-md-10.col-md-offset-1
			h1 Enter W/L Records

			form#records-form.form
				each t,i in teams

					if i % 4 == 0
						.row

					.col-md-3
						.form-group.odds-group(data-tid="#{t.id}")
							label.bold #{t.short_name} [#{t.division}] &nbsp;&nbsp;&nbsp;
							input.form-control-override.input-inline-small(name="wins", type="number", min="0", max="17", placeholder="Wins", required)
							input.form-control-override.input-inline-small(name="losses", type="number", min="0", max="17", placeholder="Losses", required)

				button.flat-button(type="submit") Submit

	.row.matches-container.page-container.hidden
		.col-md-10.col-md-offset-1
			h1 Enter This Week's Matches

			form#matches-form.form

				- for (var i = 0; i < 16; i++) {
					.match-input-container(data-which="#{i + 1}") #{i + 1}. 
						select(required)
							option
							each t,i in teams
								option(value='#{t.id}')=t.short_name
						input.form-control-override.input-inline-small(type="number", min="0", max="100", required, placeholder="points")

						span  vs. 
						select(required)
							option
							each t,i in teams
								option(value='#{t.id}')=t.short_name
						input.form-control-override.input-inline-small(type="number", min="0", max="100", required, placeholder="points")

				- }

				button.flat-button(type="submit") Submit





	script(type="text/javascript").
		var teams = !{JSON.stringify(teams)},
			users = !{JSON.stringify(users)};

		$(function() {
			$("#winners-form").on("submit", submitOdds);
			$("#odds-form").on("submit", submitOdds);
			$("#records-form").on("submit", submitRecords);
			$("#matches-form").on("submit", submitMatches);

			$(".match-input-container select").on("change", updateMatchSelectOptions)
		});

		// Toggles which container is visible
		function toggleContainer(which) {
			$(".page-container").addClass("hidden");
			$("." + which).removeClass("hidden");
		};

		// Generic API callback helper
		function apiCallback(res) {
			if (res.success)
				$(".success-container").text('Success!')
			else
				$(".error-container").text("Error:: ",res.error);
		}

		// Pre-fills all the forms with dummy data
		function debug() {
			var odds_sample = ["11/5","3/1","12/1","13/1","14/1","18/1","18/1","25/1","28/1","30/1","32/1","40/1","45/1","60/1","100/1","125/1"];

			function rand_sample() {
				return odds_sample[Math.floor(Math.random() * odds_sample.length)];
			};

			function rand_win_loss() {
				return Math.round(Math.random() * 16)
			};

			function rand_match_point_cost() {
				return Math.round(Math.random() * 30)
			};

			$(".odds-container").find("input").each(function() {
				$(this).val(rand_sample());
			});

			$(".win-loss-container").find("input").each(function() {
				$(this).val(rand_win_loss())
			});

			// -- Debug for Matches  -- //

			// Get team ids for matches
			var team_ids = _.pluck(teams, 'id');

			// Shuffle them for random matches
			team_ids = _.shuffle(team_ids);

			var $container = $("#matches-form")
			for (var i = 1; i <= team_ids.length; i+=2) {

				var match_num = (i + 1) / 2,
					$match_container = $container.find(".match-input-container[data-which='" + match_num + "']"),
					counter = 0;

				// In each match container, select option with randomized team id
				$match_container.find("select").each(function() {
					$(this).find("option[value='" + (team_ids[i - counter++]) + "']").attr("selected", true);
				});

				// In each match container, add random point cost for team selection
				$match_container.find("input").each(function() {
					$(this).val(rand_match_point_cost());
				});
			};	
		};

		function submitOdds(e) {

			e.preventDefault();
			e.stopPropagation();

			// Verify that all odds are entered
			var valid = true;
			$(".odds-container").find("input").each(function() {
				if ($(this).val().length == 0) valid = false;
			});

			if (!valid)
				return $(".error-container").text("Missing some odds, can't submit");

			// Get params
			var odds_by_team = {};
			$("#odds-form").find(".odds-group").each(function() {
				var team_id = $(this).data("tid");
				odds_by_team[team_id] = {
					wildcard_winner: is_winner(team_id, true),
					division_winner: is_winner(team_id, false)
				}
				$(this).find('input').each(function() {
					console.log($(this).find('input'), $(this).attr("name"));
					odds_by_team[team_id][$(this).attr("name")] = $(this).val();
				});
			});

			function is_winner(team_id, is_wildcard) {
				var $selector = $("option:selected[value='" + team_id + "']");
				return $selector.length > 0 && $selector.parent().data("is_wildcard") == is_wildcard;
			};

			console.log("Odds - ",odds_by_team)

			$.post("/api/set_odds", { odds: JSON.stringify(odds_by_team) }, apiCallback,'json');
		};

		function submitRecords(e) {
			e.preventDefault();
			e.stopPropagation();

			var data = {};

			$(this).find(".form-group").each(function() {
				data[$(this).data("tid")] = {
					wins: 	$(this).find("input[name='wins']").val(),
					losses: $(this).find("input[name='losses']").val()
				}
			});

			console.log("D:: ",data)

			$.post("/api/set_records", { records: JSON.stringify(data) }, apiCallback, "json");	
		};


		function submitMatches(e) {
			e.preventDefault();
			e.stopPropagation();

			var data = {},
				matches = [];

			function getTeamIds($container) {
				return $container.find("select").map(function() {
					return parseInt($(this).find(":selected").val());
				}).slice(0,2)
			};

			function getPointCosts($container) {
				return $container.find("input").map(function() {
					return parseInt($(this).val())
				}).slice(0,2)
			};

			$("#matches-form").find(".match-input-container").each(function() {
				var team_ids = [],
					point_costs = [];
				//$(this)
				matches.push(_.zip(getTeamIds($(this)), getPointCosts($(this))))
			});

			console.log("Matches:: ",matches);
			data.matches = JSON.stringify(matches);

			$.post("/api/set_matches", data, apiCallback, "json");
		};

		function updateMatchSelectOptions(e) {
			var team_id = $(this).val();

			$(this).find("option:selected").addClass("marked");

			//$("#matches-form").find("option[value='" + team_id + "']").each(function() {
				//if (!$(this).hasClass("marked")) $(this).remove();
			//});
		};



