extends layout


block content

	.col-md-10.col-md-offset-1
		h1 The Lobby
			- var disabled = (made_weekly_bets)
			- var klass = (made_weekly_bets || !user || matches.length == 0) ? 'disabled' : ''
			button.tooltipper(class="#{klass} flat-button pull-right" name="match-betting-button", data-toggle="tooltip", title="Play our new mini-game. Pick the winners of this week's matches with a limited point system. Best record wins. (Note: you must be logged in to play)", data-placement="bottom") New! Mini-Game: Weekly Matches
		
		if user
			.row-fluid.bordered 
				.col-md-12
					h3 Your Picks:
						button.flat-button.pull-right(name='toggle-picks', style="margin-top:10px;") Show All Weeks

					table#my-picks-table.picks-table.table.table-bordered.table-open(data-pid="#{user.id}")
						th Week
						each heading, i in pick_ordering
							th=heading

						tbody
							each pick, i in picks
								- var klass = (i == picks.length - 1) ? 'this-week-picks' : 'hidden'
								tr(class="#{klass} weekly-picks-container" data-week="#{pick.week}")
									td=pick.week

									each team, j in pick.formatted_picks
										td(title="#{team.name}")
											img.dashboard-team-thumbnail.team-logo-hover(src="#{team.logo_path}")

							- var start_week = (picks.length > 0) ? picks[picks.length - 1]['week'] + 1 : WEEK_OF_SEASON;
							- for (var j = start_week; j <= 17; j++) { 
								tr.hidden.weekly-picks-container
									td #{j}

									if in_picking_window && j == picks.length + 1 && picks.length < WEEK_OF_SEASON
										td.align-center.bold(colspan="#{pick_ordering.length}")
											a(href='/picker?lid=#{lid}') Make your picks for next week!
									else
										- for (var k = 0; k < pick_ordering.length; k++) {
											td 
										- }
							- }



		h3 Active Leagues
		p Join a league from the list below (some will require a password), or 
			a.flat-button(href="/create") Create a Game

		if !user
			p
				span.highlight Almost there! If you're already a Pony Up member, sign in at the top right. 

		if leagues.length == 0
			p No active leagues at the moment...
		table#lobby-table.table.table-hover
			th
			th League Title
			th Members
			th 

			tbody
				each league,i in leagues
					tr(name='league-row', data-lid='#{league.id}')
						td #{i+1}
						td=league.title
						td #{league.players.join(", ")}
						- var btn_klass = (league.password) ? '' : 'btn-lighter'
						td(name='join-cell', data-lid='#{league.id}', data-private="#{league.password != null}") 
							button(class="flat-button #{btn_klass}", name="join-button") Join &nbsp;
								if league.password
									i.fa.fa-lock
								else
									i.fa.fa-unlock


		#match-picker-modal.modal.fade(tabindex="-1", role="dialog", aria-hidden="true", style="width: 600px;")
			.modal-dialog(style="margin: 0 auto;")
				.modal-content
					.modal-header
						button.close(type="button", data-dismiss="modal")
							span(aria-hidden="true") &times;
							span.sr-only Close
						h4.modal-title Welcome to the Pony Up Weekly Mini-Challenge
					.modal-body(style="max-height: 1000px;")
						.error-container.error.align-center

						p
							b Rules: 
							| You're given 100 "points" to pick the most winners per week. 
							| Each pick has a point cost - obvious favorites cost a lot! Make
							| the wisest use of your 100 points and win the game.

						h1#points-remaining.align-center 100
						h5.align-center points remaining

						if matches
							each match, i in matches
								.row-fluid.total-match-container
									.col-sm-5.single-match-container(data-mid="#{match.id}", data-tid="#{match.team1Id}", data-cost="#{match.team1Points}")
										.align-center
											div
												b #{match.team1Points} pts.
											img(src="#{match.team1LogoPath}", alt="#{match.team1Name}", style="width:75px; height: auto; max-width: 100%;")
											div Record: #{match.team1Record}
									.col-sm-2.align-center vs.
									.col-sm-5.single-match-container(data-mid="#{match.id}", data-tid="#{match.team2Id}", data-cost="#{match.team2Points}")
										.align-center
											div
												b #{match.team2Points} pts.
											img(src="#{match.team2LogoPath}", alt="#{match.team2Name}", style="width:75px; height: auto; max-width: 100%;")
											div Record: #{match.team2Record}
					.modal-footer
							button.flat-button(type="submit") Done
						

	script(type="text/javascript").
		var selections = localStorage.getItem("selections");
		console.log('Selections::',JSON.parse(selections))

		var my_leagues = !{JSON.stringify(my_leagues)},
			my_weekly_picks = !{JSON.stringify(my_weekly_picks)},
			has_picked = !{JSON.stringify(has_picked)},
			leagues = !{JSON.stringify(leagues)},
			picks = !{JSON.stringify(picks)},
			teams = !{JSON.stringify(teams)};

		var user = !{JSON.stringify(user)};

		var picks_expanded = false;

		$(function() {

			$(".tooltipper").tooltip()
			// 
			updateButtons();
			// 
			$(document).on("click", "button[name='join-button']", function(e) {
				if ($(this).parent().data("private"))
					openJoin(e)
				else {
					var $cell = $(this).parent()
					joinGame($(this), $cell.data("lid"), null);
				}
			});

			$("button[name='toggle-picks']").on("click", togglePicks);

			$(".single-match-container").on("click", toggleMatchSelection);
			$("#match-picker-modal").find("button[type='submit']").on('click', submitMatches);

			$("button[name='match-betting-button']").on("click", launchModal);
		});

		function launchModal(e) {
			if (!$(this).hasClass("disabled"))
				$("#match-picker-modal").modal()
		};

		function toggleMatchSelection(e) {
			var $points_container = $("#points-remaining"),
				current_num_points = parseInt($points_container.text()),
				cost = parseInt($(this).data("cost"));

			// Clear state
			$points_container.removeClass("error");

			// Check if opposition selected
			if ($(this).parent().hasClass("settled") && !($(this).hasClass("on"))) {
				var $other = $(this).parent().find(".on"),
					other_points = parseInt($other.data("cost"));

				$points_container.text(current_num_points + other_points);
				current_num_points += other_points;

				$other.toggleClass("on");
				$(this).parent().toggleClass("settled")
			}

			if ($(this).hasClass("on")) {
				$points_container.text(current_num_points + cost);
			} else {
				$points_container.text(current_num_points - cost);
			}

			$(this).toggleClass("on");
			$(this).parent().toggleClass("settled");

			if (parseInt($points_container.text()) < 0)
				$points_container.addClass("error")
		};

		function submitMatches() {

			var points_remaining = parseInt($("#points-remaining").text()),
				matches = [],
				$btn = $(this);

			$btn.text("Working...").attr("disabled",true).addClass("disabled")

			// Don't allow if negative points (THIS IS THE ONLY CHECK)
			if (points_remaining < 0) {
				$btn.text("Done").attr("disabled", false);
				return $("#match-picker-modal").find(".error-container").text("You have negative picking points! Un-select some games.")
			}
			
			// Grab match bets
			$(".total-match-container").each(function() {
				var $selected = $(this).find(".on");
				if ($selected.length > 0)
					matches.push([$selected.data("mid"), $selected.data("tid"), $selected.data("cost")]);
			});

			// Post to DB
			$.post("/api/set_match_bets", {matches: JSON.stringify(matches)}, function(res) {
				if (res.success) {
					$("#match-picker-modal").find(".modal-body").css("max-width", "300px").empty().append("<h3 class='align-center success'>Picks saved!</h3>");
					
					setTimeout(function() {
						$("#match-picker-modal").modal('hide');
						$("button[name='match-betting-button']").attr("disabled",true).addClass("disabled");
					}, 3000)

				} else {
					$("#match-picker-modal").find(".error-container").empty().text(res.error)
					$btn.text("Done").attr("disabled", false);
				}

			}, 'json');
		};

		function togglePicks(e) {
			
			$("#my-picks-table").find("tr.weekly-picks-container").not(".this-week-picks").toggleClass("hidden")
			
			if (picks_expanded)
				$(this).text("Show All Weeks")
			else
				$(this).text("Hide All Week")
			
			picks_expanded = !picks_expanded;
		};

		// Handler - button click
		function openJoin(e) {
			var $btn = $(e.currentTarget),
				$cell = $(e.currentTarget).parent();

			if ($btn.data("opened"))
				return joinGame($btn, $cell.data('lid'), $cell.find('input').val());

			$btn
				.data("opened",true)
				.before("<input class='form-control-override inline' type='text' maxlength='24' placeholder='Password' />");
		};

		// Hanlder - button click that hits the api and attempts to join game
		function joinGame($btn, league_id, pw_input) {

			// Time password (if applicable) 
			if (pw_input) {
				pw_input = pw_input.trim();
				if (pw_input.length == 0)
					return $btn.fadeOut(125).fadeIn(125);
			}

			// Update btn text
			$btn.addClass("disabled").text("Working...");

			// ** If during onboarding, will have no user object to join */
			$.post('/api/join_league', { league_id: league_id, password: pw_input }, function(res) {
				console.log("Res:",res);
				if (res.success) {
					// If user exists, go to dashboard
					if (user) {
						window.location = "/dashboard/" + league_id;
					// Else, set local storage and go to sign up
					} else {
						localStorage.setItem("league", league_id);
						window.location = "/sign_up";
					}

				} else {
					$btn.parent().find("input").addClass("error-input");
					$btn.text("Join").removeClass("disabled");
				}
			}, 'json');
		};

		function updateButtons() {
			var league_ids = _.pluck(my_leagues, 'id');

			$("tr[name='league-row']").each(function() {
				// Update buttons if already a member
				if (league_ids.indexOf($(this).data("lid")) != -1) {

					var $cell = $(this).find("td[name='join-cell']"),
						lid = $(this).data("lid");
					$cell
						.empty()
						.append("<a class='flat-button dashboard-button button-inverted' href='/dashboard/" + lid + "'>View League</a>")
				}
			});
		};

